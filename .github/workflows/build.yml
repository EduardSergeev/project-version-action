name: build

on:
  push:

jobs:
  node-test:
    runs-on: ubuntu-latest
    env:
      TZ: Australia/Sydney
    steps:
    - uses: actions/checkout@v2
    - name: Set project version for Node project
      uses: './'
      with:
        version-file: test/node/example/package.json    
    - name: Test if version '${{ env.VERSION }}' is correctly set for Node project
      run: cd test/node/example && npm install && npm test

  dotnet-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set project version for .NET project
      uses: './'
      with:
        time-zone: Australia/Sydney
        version-file: test/dotnet/example/example.csproj
        version-stub: '0.0.0.0'      
    - name: Test if version '${{ env.VERSION }}' is correctly set for .NET project
      run: cd test/dotnet/example && dotnet test

  dotnet-cs-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set project version for .NET project via AssemblyInfo.cs
      uses: './'
      with:
        time-zone: Australia/Sydney
        version-file: test/dotnet/attribute/properties/AssemblyInfo.cs
        version-stub: '0.0.0.0'      
    - name: Test if version '${{ env.VERSION }}' is correctly set for .NET project via AssemblyInfo.cs
      run: cd test/dotnet/attribute && dotnet test

  cabal-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        date: ['current', '2021-06-07']
    steps:
    - uses: actions/checkout@v2
    - name: Set current date to ${{ matrix.date }}
      if: ${{ matrix.date != 'current' }}
      run: sudo date -s ${{ matrix.date }}
    - name: Set project version for Cabal project
      uses: './'
      with:
        version-file: test/cabal/example/example.cabal
        leading-zeros: false    
    - name: Test if version '${{ env.VERSION }}' is correctly set for Cabal project
      run: cd test/cabal/example && cabal update && cabal test

  time-zone-test:
    strategy:
      fail-fast: false
      matrix:
        env:
          - {  }
          - { TZ: Australia/Sydney }
        time-zone:
          - 
          - America/New_York
    runs-on: ubuntu-latest
    env: ${{ matrix.env }}
    steps:
    - uses: actions/checkout@v2
    - name: Set project version for Node project
      uses: './'
      with:
        version-file: test/node/example/package.json
        time-zone: ${{ matrix.time-zone }}
    - name: Test if version '${{ env.VERSION }}' is correctly set for Node project
      run: cd test/node/example && npm install && npm test
